{"ast":null,"code":"var _jsxFileName = \"/Users/gem/Documents/HErbAi/herb-identification/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleSubmit = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await fetch('http://localhost:8000/image', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setPrediction(data[0]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Herb Identification \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 43\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), \" \", prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Prediction: \", prediction, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), \"   \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"UHhou3VZnWH74k0LHiwAcFntNYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","prediction","setPrediction","handleFileUpload","event","file","target","files","handleSubmit","formData","FormData","append","response","fetch","method","body","data","json","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/gem/Documents/HErbAi/herb-identification/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [prediction, setPrediction] = useState('');\n\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        setSelectedFile(file);\n    };\n\n    const handleSubmit = async() => {\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        try {\n            const response = await fetch('http://localhost:8000/image', {\n                method: 'POST',\n                body: formData,\n            });\n            const data = await response.json();\n            setPrediction(data[0]);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return ( <\n        div style = {\n            { margin: '20px' } } >\n        <\n        h1 > Herb Identification < /h1>   <\n        input type = \"file\"\n        accept = \"image/*\"\n        onChange = { handleFileUpload }\n        />   <\n        button onClick = { handleSubmit } > Submit < /button> {\n        prediction && < p > Prediction: { prediction } < /p>}   <\n        /div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCP,eAAe,CAACK,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAW;IAC5B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,YAAY,CAAC;IAEtC,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCf,aAAa,CAACc,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBAAStB,OAAA;IACDwB,KAAK,EACL;MAAEC,MAAM,EAAE;IAAO,CAAG;IAAAC,QAAA,gBACxB1B,OAAA;MAAA0B,QAAA,EACI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,OAAG,eAAA9B,OAAA;MAC5B+B,IAAI,EAAG,MAAM;MACnBC,MAAM,EAAG,SAAS;MAClBC,QAAQ,EAAK1B;IAAkB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,OAAG,eAAA9B,OAAA;MACEkC,OAAO,EAAKtB,YAAc;MAAAc,QAAA,EAAE;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,KAAC,EACtDzB,UAAU,iBAAIL,OAAA;MAAA0B,QAAA,GAAK,eAAa,EAAErB,UAAU,EAAE,GAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,KAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEb;AAAC5B,EAAA,CAtCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}